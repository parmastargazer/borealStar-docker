volumes:
  pgdata:
    driver: local
  backend_storage:
    driver: local 





services:

  database:
    # image: postgres:latest
    build: 
      context: _docker/postgres/
      dockerfile: Dockerfile.dev
    container_name: "bs_db"
    restart: unless-stopped
    env_file: .env.postgres
    volumes:
      - pgdata:/var/lib/postgresql/
      - ./_docker/postgres/dumps:/opt/dumps/:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --quiet"]
      interval: 10s
      timeout: 40s
      retries: 5

    expose:
      - 5432


  adminer:
    container_name: "bs_adminer"
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      database:
        condition: service_healthy

  backend_production:
    container_name: "bs_backend"
    build: 
      context: .
      dockerfile: _docker/backend/Dockerfile.alpine.prod

    expose:
      - 8000
      - 443
      
    depends_on:
      database:
        condition: service_healthy
      
    environment:
      - CMD_PATH=/app/
    volumes:
      # - ./_docker/backend/conf.d/:/etc/:rw
      - ./_docker/backend/periodic/:/etc/crontabs/
      - backend_storage:/app/storage/
      # - ./backend/:/var/www/html:rw
  frontend:
    container_name: "bs_frontend"
    volumes:
      - ./frontend/:/var/www/html:rw
    build: 
      context: .
      dockerfile: _docker/frontend/Dockerfile

    expose:
      - 5173
    ports:
    - 81:5173
